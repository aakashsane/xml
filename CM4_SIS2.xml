<?xml version="1.0"?>

<!-- MDT XML -->

<!-- GFDL Model Development Team (MDT) documentation: http://cobweb.gfdl.noaa.gov/~niz/mdt/ -->
<!-- GFDL MDT Atmosphere Working Group (AWG) documentation: http://cobweb.gfdl.noaa.gov/~cjg/awg/ -->

<!-- QUICK START GUIDE:

# Change YOURGROUPLETTER to your group, such as f, w, o...
      <project>gfdl_YOURGROUPLETTER</project>

# To check out codes and compile:
     
module load fre/bronx-9
fremake -x CM4_SIS2.xml -p ncrc2.intel -t prod-openmp cm4_sis2_compile

# To run regression test : 
frerun -r basic -x CM4_SIS2.xml -p ncrc2.intel -t prod-openmp CM4_c96L48_am4c3_2000_sis2_meke

# To run a complete coupled experiment (with automated database entry if MDBIswitch in "on"):
frerun -x CM4_SIS2.xml -p ncrc2.intel -t prod-openmp CM4_c96L48_am4c3_2000_sis2_meke


#EXTRAs      
# To run fredb after an experiment is finished to manually add it to the database:
fredb -x CM4_SIS2.xml -p gfdl.ncrc2-intel -t prod-openmp -n CM4_c96L48_am4c3_2000_sis2_meke

# To check what is the input data of this experiment:
inputfiles -x CM4_SIS2.xml -p ncrc2.intel
-->

<experimentSuite rtsVersion="4" xmlns:xi="http://www.w3.org/2003/XInclude">

  <property name="RELEASE" value="ulm"/>                <!-- CVS tag for source code -->
  <property name="MOM6_DATE" value="2015.02.10"/>                  <!-- git tag date for MOM6 source code -->
  <property name="MOM6_GIT_TAG" value="dev/master/$(MOM6_DATE)"/>  <!-- git tag for MOM6 source code -->
  <property name="FRE_STEM"  value="$(RELEASE)_plus_LowSens_Drag_mom6_$(MOM6_DATE)"/>   <!--  customize as needed -->
  <property name="FRE_VERSION" value="fre/bronx-9"/>             <!-- -->
  <property name="ANALYSIS_SWITCH" value="on"/>
  <property name="MDBIswitch" value="on"/>                       <!-- on/off switch for MDBI database -->
  <property name="ProjectID" value="MDT"/>                       <!-- database top level -->
  <property name="DEBUGLEVEL" value=""/>

  <property name="AWG_INPUT_HOME_GAEA" value="awg_include"/>
  <property name="AWG_INPUT_HOME_ZEUS" value="awg_include"/>
  <property name="AWG_INPUT_HOME_GFDL" value="/nbhome/$USER/$(FRE_STEM)/$(name)/mdt_xml/awg_include"/>

<!--
GFDL FAIR USE POLICY

GFDL recognizes the essential nature of collaboration in the scientific
enterprise, including the importance of novel application and analysis of our
models. In order to maximize mutual benefit from collaboration, the use of
experimental GFDL models** should be done in a manner that ensures that
individuals involved in model development receive proper credit for their
work; in order to minimize the potential for misapplication of experimental
models, collaborations should actively engage model developers. Publication of
results using experimental GFDL models should be done in consultation with
scientists that participated in the model development. Consultation with GFDL
model developers should occur before submission of publications based on
experimental GFDL models, and should include agreement on the appropriate level
of acknowledgment, co-authorship and participation by the model developers.
Since experimental models have not been thoroughly vetted, experimental GFDL
models and their output should be distributed only after consultation with the
developers of the model. After a GFDL model has been described in a
peer-reviewed publication it is no longer experimental, and results based on
the model should cite the publication(s) describing the model.
 
** "Experimental GFDL models" refers to models (e.g., a coupled climate model),
model components (e.g., parameterization schemes), model configurations (e.g.,
the specific arrangement and parameter settings of model components) arising
from model development efforts at GFDL, but whose formulation and configuration
have not yet been documented in the peer-reviewed literature, as well as outputs
from integrations with these models.
-->

  <property name="EXP_CLIMO_START" value="0001"/>
  <property name="EXP_CLIMO_END"   value="0060"/>
  <property name="EXP_CLIMO_LEN"   value="60"/>
  <property name="ANA_CLIMO_START" value="0001"/>
  <property name="ANA_CLIMO_END"   value="0010"/>
  <property name="ANA_CLIMO_LEN"   value="10yr"/>
  <property name="PP_CLIMO_CHUNK"  value="5yr"/>
  <property name="PP_CLIMO_CHUNK_B" value="20yr"/>
  <property name="PP_OCEAN_CHUNK"   value="5yr"/> 
  <property name="PP_OCEAN_CHUNK_B" value="20yr"/> 


<!-- Reference release tag for existing files in the archives for answer comparison. Used in "REFERENCE" property. -->
   <property name="reference_tag"      value="ulm_answers"/>


<!--=================-->
<!--= CHANGING NPES =-->
<!--=================-->

<!--
This xml includes a number of predefined options for the number of PEs.
Changing the number of PEs can be accomplished by simply 
modifying 'npes' and segment 'runTime' in the xml <production> block:

      <production simTime="$(EXP_AMIP_LEN)" units="years" npes="1728" runTime="16:00:00">
        <segment simTime="12" units="months" runTime="3:00:00"/>
      </production>

Choosing a particular PE number is a balancing act. The higher npes, 
the faster the model throughput, but also the lower the model efficiency
(i.e. the overall simulation will cost more in terms of core hours).

-->

  <setup>

    <platform name="ncrc2.intel">
<!-- Please make sure to change "YOURGROUPLETTER" to your group, such as b, f, g, m, o... -->
      <project>gfdl_YOURGROUPLETTER</project>
      <directory stem="$(FRE_STEM)">
        <!--unswept locations--><!-- CPERM=/lustre/f1/unswept -->
	<root>$HOME/$(stem)</root>
	<exec>$CPERM/$USER/$(stem)/$(name)/$(platform)-$(target)/exec</exec>
	<state>$CPERM/$USER/$(stem)$(DEBUGLEVEL)/$(name)/$(platform)-$(target)/state</state>
 	<scripts>$CPERM/$USER/$(stem)$(DEBUGLEVEL)/$(name)/$(platform)-$(target)/scripts</scripts>
        <!--swept locations (including the staged archive location)-->
        <archive>$CTMP/$USER/$(stem)$(DEBUGLEVEL)/$(name)/$(platform)-$(target)/archive</archive>
        <stdout>$CTMP/$USER/$(stem)$(DEBUGLEVEL)/$(name)/$(platform)-$(target)/stdout</stdout>
        <work>$CTMP/$USER/work/$(stem)/$FRE_JOBID</work>
      </directory>
      <property name="F2003_FLAGS"       value=" -DINTERNAL_FILE_NML -g -traceback"/>
      <property name="AWG_INPUT_HOME"    value="$(AWG_INPUT_HOME_GAEA)"/>
      <property name="AWG_ARCHIVE_ROOT"  value="/lustre/f1/unswept/Chris.Golaz/archive/mdt"/>
      <property name="NB_ROOT"           value="/nbhome/$USER/$(FRE_STEM)/$(name)"/>
      <property name="CWG_HOME"          value="/lustre/f1/unswept/John.Krasting/cwg"/>
      <property name="REFERENCE"         value="/lustre/f1/unswept/Niki.Zadeh/$(reference_tag)/$(name)/$(platform)-$(target)"/>
      <property name="REFERENCE_awg"     value="/lustre/f1/unswept/Niki.Zadeh/awg/tikal_201403_answers/$(name)/$(platform)-$(target)"/>
      <property name="ARCHIVE_INPUT_NZ"     value="/lustre/f1/unswept/Niki.Zadeh/archive/input"/>
     
      <csh><![CDATA[
        source $MODULESHOME/init/csh
 
        module use -a /ncrc/home2/fms/local/modulefiles
        module unload PrgEnv-pgi PrgEnv-pathscale PrgEnv-intel PrgEnv-gnu PrgEnv-cray
        module unload netcdf fre
        module load PrgEnv-intel/4.0.46
        module swap intel intel/12.0.5.220
        module load $(FRE_VERSION)
        module load git
 
        setenv KMP_STACKSIZE 512m
        setenv NC_BLKSZ 1M
        setenv F_UFMTENDIAN big
      ]]></csh>

      <!--test new compiler options
      <mkmfTemplate file="$HOME/fre/fre-commands/site/ncrc/intel.mk"/>
      -->
    </platform>

    <platform name="ncrc2.default">
      <xi:include xpointer="xpointer(//setup/platform[@name='ncrc2.intel']/node())" />
    </platform>

    <platform name="nescc.intel">
      <project>gfdlport</project>
      <directory stem="$(FRE_STEM)">
        <root>/scratch2/portfolios/GFDL/gfdlscr/$USER/$(stem)</root>
        <src>/scratch2/portfolios/GFDL/gfdlscr/$USER/$(stem)/$(name)/src</src>
        <exec>/scratch2/portfolios/GFDL/gfdlscr/$USER/$(stem)/$(name)/$(platform)-$(target)/exec</exec>
        <scripts>$HOME/$(stem)/$(name)/$(platform)-$(target)/scripts</scripts>
        <stdout>/scratch2/portfolios/GFDL/gfdlscr/$USER/$(stem)/$(name)/$(platform)-$(target)/stdout</stdout>
        <state>$HOME/$(stem)/$(name)/$(platform)-$(target)/state</state>
        <work>/scratch2/portfolios/GFDL/gfdlscr/$USER/work/$FRE_JOBID</work>
        <ptmp>/scratch2/portfolios/GFDL/gfdlscr/$USER/ptmp</ptmp>
        <stmp>/scratch2/portfolios/GFDL/gfdlscr/$USER/stmp</stmp>
        <archive>/scratch2/portfolios/GFDL/gfdlscr/$USER/$(stem)/$(name)/$(platform)-$(target)</archive>
      </directory>
      <mkmfTemplate file="/home/Niki.Zadeh/fre/fre-commands/site/nescc/intel.mk"/>
      <property name="F2003_FLAGS"       value=" -DINTERNAL_FILE_NML"/>
      <property name="AWG_INPUT_HOME"    value="$(AWG_INPUT_HOME_ZEUS)"/>
      <property name="AWG_ARCHIVE_ROOT"  value="/scratch2/portfolios/GFDL/gfdlscr/John.Krasting/awg/mdt"/>
      <property name="NB_ROOT"           value="/nbhome/$USER/$(FRE_STEM)/$(name)"/>
      <property name="CWG_HOME"          value="/scratch2/portfolios/GFDL/gfdlscr/John.Krasting/cwg"/>
      <property name="REFERENCE"         value=""/>
      <property name="REFERENCE_awg"     value=""/>
      <property name="ARCHIVE_INPUT_NZ"  value="/scratch2/portfolios/GFDL/gfdlscr/Niki.Zadeh/archive/input"/>

      <csh><![CDATA[
        module use ~fms/local/modulefiles
        #module load intel/12-12.0.4.191 #need more up-to-date compiler for ulm
        module load intel/13.0.079
        module load netcdf/4.1.1-intel-12
        module load mpt/2.06
        module load $(FRE_VERSION)
        module load nco
        setenv MPICH_CPUMASK_DISPLAY
        setenv KMP_STACKSIZE 512m
        setenv NC_BLKSZ 1M
        setenv F_UFMTENDIAN big
        setenv SMA_SHMALLOC_FORCE_EQUAL off
        setenv MPI_BUFS_PER_PROC 512
        setenv MPI_BUFS_PER_HOST 512
      ]]></csh>
    </platform>

    <platform name="nescc.default">
      <xi:include xpointer="xpointer(//setup/platform[@name='nescc.intel']/node())" />
    </platform>

    <platform name="gfdl.default">
      <property name="NB_ROOT"  value="/nbhome/$USER/$(FRE_STEM)/$(name)"/><!--Do not change this! Other platforms use  the same value. -->
      <directory stem="$(FRE_STEM)">
        <archive>$ARCHIVE/$(stem)/$(name)/$(platform)-$(target)</archive>
        <postProcess>$(archiveDir)/pp</postProcess>
        <analysis>$(NB_ROOT)</analysis><!--Do not change this! frepp translates this to $out_dir. This is also the directory under which  frepp looks for mom6 clone.  -->
	<ptmp>/ptmp/$USER</ptmp>
      </directory>
      <property name="F2003_FLAGS"       value=" -DINTERNAL_FILE_NML"/>
      <property name="AWG_INPUT_HOME"    value="$(AWG_INPUT_HOME_GFDL)"/>
      <property name="AWG_ARCHIVE_ROOT"  value="/archive/cjg/mdt"/>
      <property name="CWG_HOME"          value="/archive/John.Krasting/cwg"/>
      <property name="REFERENCE"         value=""/>
      <property name="REFERENCE_awg"     value=""/>
      <property name="ARCHIVE_INPUT_NZ"  value=""/>

      <csh><![CDATA[
        source $MODULESHOME/init/csh
        module use -a /home/fms/local/modulefiles
        module purge
        module load $(FRE_VERSION)
        module load fre-analysis
        module load git
        setenv FREVERSION $(FRE_VERSION)           
        setenv NBROOT $(NB_ROOT)
       /home/Niki.Zadeh/nnz_tools/bin/verify -m $(MOM6_GIT_TAG) -x user/nnz/ulm 
       ]]>
      </csh>
    </platform>
    <platform name="gfdl.ncrc2-default">
      <xi:include xpointer="xpointer(//setup/platform[@name='gfdl.default']/node())" />
    </platform>
    <platform name="gfdl.ncrc2-intel">
      <xi:include xpointer="xpointer(//setup/platform[@name='gfdl.default']/node())" />
    </platform>

    <platform name="gfdl.nescc-default">
      <xi:include xpointer="xpointer(//setup/platform[@name='gfdl.default']/node())" />
    </platform>
    <platform name="gfdl.nescc-intel">
      <xi:include xpointer="xpointer(//setup/platform[@name='gfdl.default']/node())" />
    </platform>

    <platform name="gfdl-ws.default">
      <xi:include xpointer="xpointer(//setup/platform[@name='gfdl.default']/node())" />
    </platform>

  </setup>

<!--===========-->
<!--= COMPILE =-->
<!--===========-->
  <!--The property MOM6_EXAMPLES should point to the mom6 directory that is checked out. It is needed by MOM6 to access its inpu data files-->
  <property name="LIBS_ROOT"   value="cm4_sis2_compile"/>
  <property name="FMS_LIB_DIR" value="./$(LIBS_ROOT)/$(platform)-$(target)/exec"/>
  <property name="MOM6_EXAMPLES"  value="$root/$(LIBS_ROOT)/src/mom6"/>

  <!-- cm4_sis2_compile is the compile experiment name -->
  <experiment name="cm4_sis2_compile">
    <description>

Experiment to build executable.
* ulm code base
* MOM6 ocean code (updated to dev/master/2014.11.17)
* Ming Zhao's changes for low sensitivity configuration. Changes answers for all! (lowsen20141106_miz)
* Code updates from Jhon Dunne for new surface fluxes options (drag_min_jpd_20141030)
* Code update for icebergs to output less warnings adjustable_berg_warn_linits_jpk_20141003
* Swap ice_sis (aka SIS1) with SIS2

    </description>

    <component name="fms" paths="shared" includeDir="$root/$(LIBS_ROOT)/src/shared/include">
     <description domainName="infrastructure" communityName="FMS" communityVersion="$(RELEASE)" communityGrid=""/>
      <source>
        <codeBase version="$(RELEASE)"> shared </codeBase>
      </source>
      <compile>
        <cppDefs>$(F2003_FLAGS) -Duse_libMPI -Duse_netCDF </cppDefs>
      </compile>
    </component>

    <component name="atmos_phys" requires="fms" paths="atmos_param atmos_shared">
      <description domainName="" communityName="" communityVersion="$(RELEASE)" communityGrid=""/>
      <source>
        <codeBase version="$(RELEASE)"> atmos_shared atmos_param_am3 </codeBase>
        <csh>
           #==For JPD Drag Tests==
           cvs up -r drag_min_jpd_20141030 atmos_param/monin_obukhov/monin_obukhov.F90
           cvs up -r drag_min_jpd_20141030 atmos_param/monin_obukhov/monin_obukhov_kernel.F90

           #for am4c1r1 runs. Changes answers for all!
           cvs up -r lowsen20141106_miz atmos_param/shallow_cu/uw_conv.F90 atmos_param/shallow_cu/deep_conv.F90 atmos_param/shallow_cu/conv_plumes_k.F90
           # Total activation bug fix
           cvs update -r ulm_total_act_fix_cjg atmos_param/strat_cloud/rotstayn_klein_mp.F90
	</csh>
      </source>
      <compile>
        <cppDefs>$(F2003_FLAGS) -DCLUBB</cppDefs>
      </compile>
    </component>

    <component name="atmos_dyn" requires="fms atmos_phys" paths="atmos_coupled atmos_cubed_sphere">
      <description domainName="CubedSphere" communityName="CubedSphere" communityVersion="$(RELEASE)" communityGrid=""/>
      <source>
        <codeBase version="$(RELEASE)">
          atmos_coupled cubed_sphere_coupled
        </codeBase>
      </source>
      <compile>
        <cppDefs>$(F2003_FLAGS) -DSPMD</cppDefs>
      </compile>
    </component>


    <component name="land_lad2" requires="fms" paths="land_lad2">
      <description domainName="LM3" communityName="land_lad2" communityVersion="$(RELEASE)" communityGrid=""/>
      <source>
        <codeBase version="$(RELEASE)"> land_lad2 </codeBase>
	<csh>
          #==For JPD Drag Tests==
          cvs up -r merged_drag_updates_jpk_20141104_nnz land_lad2/land_model.F90
        </csh>
      </source>
      <compile>
        <cppDefs>$(F2003_FLAGS)</cppDefs>

<!--The following csh block is needed for compiler pre-processors that are not ANSI-compliant, such as pathscale-->
<csh> <![CDATA[
cat >Makefile.cpp <<EOF
CPPDEFS =
FRETARGET = $(target)
ifneq (\$(findstring hdf5,\${FRETARGET}),)
else
  CPPDEFS += -Duse_LARGEFILE
endif
EOF
echo vpath %.F90 `find $cwd/land_lad2 -type d` >> Makefile.cpp
echo cpp_land/%.f90: %.F90 >> Makefile.cpp
/bin/echo -e '\tcpp ${CPPDEFS} -C -v -I shared/include -o $@ $<' >> Makefile.cpp
mkdir -p cpp_land
foreach foo ( `find land_lad2 -type f -name \*.F90` )
  make -f Makefile.cpp cpp_land/$foo:t:r.f90
end
find cpp_land -type f -name \*.f90 > pathnames_land_lad2
        ]]></csh>

      </compile>
    </component>

    <component name="mom6" requires="fms ocean_shared" paths="mom6/src/MOM6/config_src/dynamic mom6/src/MOM6/config_src/coupled_driver mom6/src/MOM6/src/*/ mom6/src/MOM6/src/*/*/">
      <description domainName="Ocean" communityName="GFDL-MOM6" communityVersion="$(MOM6_GIT_TAG)" communityGrid="Tripolar"/>
      <source versionControl="git" root="http://gitlab.gfdl.noaa.gov/github_mirror">
        <codeBase version="$(MOM6_GIT_TAG)"> NULL </codeBase>
        <csh>
          git clone -b $(MOM6_GIT_TAG) http://gitlab.gfdl.noaa.gov/github_mirror/noaa-gfdl-mom6-examples.git mom6
          pushd mom6
          git checkout $(MOM6_GIT_TAG)  #needed for older git on zeus
          git submodule init src/MOM6 src/SIS2 tools/python/025gridGeneration/MIDAS
          git clone --recursive http://gitlab.gfdl.noaa.gov/github_mirror/noaa-gfdl-mom6.git src/MOM6
          git clone             http://gitlab.gfdl.noaa.gov/github_mirror/noaa-gfdl-sis2.git src/SIS2
          git submodule update #This gets the right version of submodules
          popd

          pushd mom6
          set platform_domain = `perl -T -e "use Net::Domain(hostdomain) ; print hostdomain"`
          if ("${platform_domain}" == "zeus.fairmont.rdhpcs.noaa.gov") then
            ln -s /scratch2/portfolios/GFDL/gfdlscr/John.Krasting/pdata/gfdl_O/datasets/ .datasets
          else
            ln -s /lustre/f1/pdata/gfdl_O/datasets/ .datasets
          endif
          popd	  

          test -e mom6/.datasets
          if ($status != 0) then
            echo ""; echo "" ; echo "   WARNING:  .datasets link in MOM6 examples directory is invalid"; echo ""; echo ""
          endif
        </csh>
      </source>
      <compile>
        <cppDefs><![CDATA[ $(F2003_FLAGS) -D_USE_GENERIC_TRACER -D_FILE_VERSION="'"`git-version-string $<`"'" ]]></cppDefs>
        <makeOverrides>OPENMP=""</makeOverrides> <!-- openmp switch for MOM6 may cause crash -->
      </compile>
    </component>

    <!-- We should put ice_param/ file under sis2/  git repo and do away with checkout ice_param -->
    <component name="sis2" paths="mom6/src/SIS2 ice_param" requires="fms mom6" includeDir="$root/$(LIBS_ROOT)/src/mom6/src/MOM6/src/framework" > 
         <source>
	   <codeBase version="$(RELEASE)"> ice_param </codeBase> 
         </source>
         <compile>
            <cppDefs><![CDATA[$(F2003_FLAGS) -D_FILE_VERSION="'"`git-version-string $<`"'"]]>
            </cppDefs>
         </compile>
    </component>

    <component paths="ocean_shared" requires="fms" name="ocean_shared">
      <description domainName="Ocean Generic Tracers" communityName="GFDL-ocean-shared" communityVersion="$(RELEASE)" communityGrid="Tripolar"/>
      <source>
        <codeBase version="$(RELEASE)"> ocean_shared </codeBase>
      </source>
      <compile>
        <cppDefs>$(F2003_FLAGS) </cppDefs>
      </compile>
    </component>

    <component name="coupler" paths="coupler" requires="fms atmos_dyn atmos_phys land_lad2 sis2 mom6 ocean_shared">
      <description domainName="FMS Coupler" communityName="coupler" communityVersion="$(RELEASE)" communityGrid=""/>  
      <source versionControl="git" root="http://gitlab.gfdl.noaa.gov/fms">
        <codeBase version="$(RELEASE)"> coupler.git </codeBase>
        <csh><![CDATA[
        ( cd coupler && git checkout $(RELEASE) )
        ]]>
        </csh>
      </source>
      <compile>
        <cppDefs><![CDATA[$(F2003_FLAGS) -D_FILE_VERSION="'"`git-version-string $<`"'"]]></cppDefs>
      </compile>
    </component>

  </experiment>

<!--============================-->
<!--= TEMPLATES FOR INPUT DATA =-->
<!--============================-->

  <experiment name="common_data">
    <input>
      <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/awg/input/common/sea_esf_aug2013.cpio</dataSource>
      </dataFile>
      <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/awg/input/lm3/lm3_data_20130815.tar</dataSource>
      </dataFile>
      <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/cm3/ipcc_ar5/input/common/aerosol_inputs.dec2009.cpio</dataSource>
      </dataFile>
      <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/cm3/ipcc_ar5/input/RCP/cmip5_rcp45.cpio</dataSource>
      </dataFile>
      <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/cm3/ipcc_ar5/input/common/tropchem_oct2011.cpio</dataSource>
      </dataFile>
      <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/cm3/ipcc_ar5/input/common/megan2.1_input.cpio</dataSource>
      </dataFile>
      <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/cm3/ipcc_ar5/input/historical/emissions.1x1.1859_2020.tar</dataSource>
      </dataFile>
      <dataFile label="fieldTable" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_INPUT_HOME)/field_table/field_table_am4p3</dataSource>
      </dataFile>
      <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/liteChem/input/aerosol/gas_conc_3D48L_am3p9.nc</dataSource>
      </dataFile>
      <dataFile label="input" target="INPUT/anthro_so2.1859_2010.nc" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/liteChem/input/emissions/emissions.simple.so2.1x1.1859_2020.nc</dataSource>
      </dataFile>
      <dataFile label="input" target="INPUT/emis_fuel_aircraft.1859_2010.nc" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/liteChem/input/emissions/emissions.aircraft.aero.1x1.1859_2020.nc</dataSource>
      </dataFile>
      <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/liteChem/input/emissions/so2_0.25_volcanoes.nc</dataSource>
      </dataFile>

      <diagTable>
$name
$baseDate

      </diagTable>
      <dataFile label="diagTable" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_INPUT_HOME)/diag_table/diag_table_atmos</dataSource>
      </dataFile>
      <dataFile label="diagTable" target="INPUT/" chksum="" size="" timestamp="">
         <dataSource platform="$(platform)">$(AWG_INPUT_HOME)/diag_table/diag_table_land</dataSource>
      </dataFile>
    </input>
  </experiment>

  <experiment name="c96_data">
    <input>
      <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/awg/input/lm3/19810101.static_veg.remapped_to_c96_OM4_025.v20140626.tar</dataSource>
      </dataFile>
      <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/awg/input/lm3/c96_OM4_025_hydrography_v20140620.tar</dataSource>
      </dataFile>
      <dataFile label="initCond" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/awg/input/ic/awg_C96L48_LM3_OM4_025_grid_19810101.remapped.v20140626.tar</dataSource>
      </dataFile>
      <dataFile label="gridSpec" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource platform="$(platform)">$(AWG_ARCHIVE_ROOT)/awg/input/grid/c96_OM4_025_grid_v20140620.tar</dataSource>
      </dataFile>
    </input>
  </experiment>

  <experiment name="common_csh_blocks">
    <input>
      <csh><![CDATA[

# runCommand:
set platform_domain = `perl -T -e "use Net::Domain(hostdomain) ; print hostdomain"`
if ("${platform_domain}" == "ncrc.gov") then

  set place = $atmos_nthreads
  if ( $do_concurrent_radiation == ".true." ) then
     @ place += $radiation_nthreads
     setenv MALLOC_CHECK_ 5
     setenv MPICH_GNI_NDREG_LAZYMEM disabled	
  endif

  if ( $do_ocean == "true" ) then
    alias runCommand "aprun -d $place -n $atmos_npes ./$executable:t : -n $ocean_npes -d 1 ./$executable:t"
   else
    alias runCommand "aprun -d $place -n $atmos_npes ./$executable:t"
  endif
else if ("${platform_domain}" == "zeus.fairmont.rdhpcs.noaa.gov") then
  if ( $do_ocean == "true" ) then
    alias runCommand "mpiexec_mpt -np $atmos_npes -v omplace -nt $atmos_nthreads ./$executable:t : -np $ocean_npes -v omplace -nt 1 ./$executable:t"
   else
     alias runCommand "mpiexec_mpt -np $atmos_npes -v omplace -nt $atmos_nthreads ./$executable:t"
  endif
else
  echo "FATAL: Invalid platform ... unsure how to structure mpirun command"
  exit 53
endif

# Copy AWG and OWG ascii input files to GFDL (waiting for FRE to do this for us)
if ( $?flagOutputXferOn && $?flagOutputPostProcessOn ) then
#  module switch gcp/2.2 gcp/2.3
  set xmldirlocal = `dirname $rtsxml`
  set xmldirRemote = `echo $xmldirlocal | sed -r "$patternSedHome"`
  if ("${platform_domain}" == "ncrc.gov") then
    set xmldirRemote = `echo $xmldirlocal | sed -r "$patternSedHome;$patternSedCTMP;$patternSedCPERM"`
    gcp --batch -cd -r --sync $xmldirlocal/awg_include gfdl:$(AWG_INPUT_HOME_GFDL)/..
    gcp --batch -cd -r --sync $xmldirlocal/awg_include gfdl:$xmldirRemote/
  else if ("${platform_domain}" == "zeus.fairmont.rdhpcs.noaa.gov") then
    gcp -cd -r --sync $xmldirlocal/awg_include gfdl:$(AWG_INPUT_HOME_GFDL)/..
    gcp -cd -r --sync $xmldirlocal/awg_include gfdl:$xmldirRemote/
  endif
  #trick to copy MOM6 directory but avoid traversing the .datasets links
  tar cvf mom6.tar --exclude='.datasets' -C $(MOM6_EXAMPLES) . > /dev/null
  #tar cvf mom6.tar  --exclude='.datasets' --exclude='src' --exclude='INPUT'  -C $(MOM6_EXAMPLES) . > /dev/null
  mkdir mom6
  tar xvf mom6.tar -C ./mom6 > /dev/null
  if ("${platform_domain}" == "ncrc.gov") then
    gcp --batch -cd -r --sync mom6 gfdl:$(NB_ROOT)/
  else if ("${platform_domain}" == "zeus.fairmont.rdhpcs.noaa.gov") then
    gcp -cd -r --sync mom6 gfdl:$(NB_ROOT)/
  endif
endif

# create dummy MOM6 parameter file for do_ocean=.false.
touch $work/INPUT/MOM_input
touch $work/INPUT/MOM_override
touch $work/INPUT/SIS_override
touch $work/INPUT/SIS_layout
ln -s $work/INPUT/topog.nc $work/INPUT/ocean_topog.nc 

# Record the job stdout location for later use timings database

cat >> $HOME/frejobs_stdout <<EOF_frejobs
$stdoutDir/$FRE_JOBID
EOF_frejobs


      ]]></csh>

      <csh type="always"><![CDATA[
####COMMON ALWAYS CSH BEGINS######
# MOM6 restart switch
if ( $currentSeg == 1 ) then
   set restart_flag = 'n'
else
   set restart_flag = 'r'
endif

# adjustment of dry mass first time only
set adjust_dry_mass = ".true."
if (-e $work/INPUT/coupler.res) then
   set t1 = (`grep "Model start time"   $work/INPUT/coupler.res | awk '{print $1,$2,$3,$4,$5,$6}'`)
   set t2 = (`grep "Current model time" $work/INPUT/coupler.res | awk '{print $1,$2,$3,$4,$5,$6}'`)
   foreach i (1 2 3 4 5 6)
      if ( $t1[$i] != $t2[$i] ) then
         set adjust_dry_mass = ".false."
         break   
      endif      
   end
endif

####COMMON ALWAYS CSH ENDS######

      ]]></csh>
      
     </input>
  </experiment>

  <experiment name="c96_coupled_domain_decomp">
    <input>
      <csh><![CDATA[
# Coupled configurations
  set do_ocean = "true"
  set do_concurrent_radiation = ".false."

  set domains_stack_size = "2097152"

# CM4i setting for Zeus provided by Rusty Benson
if ( "$npes" == "900" ) then
  set atmos_npes = 864
  set atmos_nthreads = 1
  set nxblocks = "1" ; set nyblocks = "6" 
  set fv_layout    = "12,12";   set fv_io_layout    = "1,4"
  set land_layout  = "12,12";   set land_io_layout  = "1,4"
  set ice_layout   = "144,6";   set ice_io_layout   = "1,6"
  set ocn_layout   = "6,6";     set ocn_io_layout   = "1,6"; set ocn_mask_table = "MOM_mask_table"  #360x210
  set ocean_npes = 36

else if ( "$npes" == "924" ) then
  set atmos_npes = "432"
  set atmos_nthreads = "2"
  set nxblocks = "1" ; set nyblocks = "2"
  set fv_layout    =   "3,24";  set fv_io_layout    =  "1,4"
  set land_layout  =   "3,24";  set land_io_layout  =  "1,4"
  set ice_layout   =   "144,3"; set ice_io_layout   =  "1,3"
  set ocn_layout   =   "10,6";  set ocn_io_layout   =  "1,6"; set ocn_mask_table = "MOM_mask_table"
  set ocean_npes = "60"

else if ("$npes" == "1878" ) then
  set atmos_npes = "864"
  set atmos_nthreads = "2"
  set nxblocks = "1" ; set nyblocks = "2" 
  set fv_layout    =   "6,24";   set fv_io_layout    =  "1,4"
  set land_layout  =   "6,24";   set land_io_layout  =  "1,4"
  set ice_layout   =   "144,6";  set ice_io_layout   =  "1,3"
  set ocn_layout   =   "15,10";  set ocn_io_layout   =  "1,10"; set ocn_mask_table = "MOM_mask_table"
  set ocean_npes = "150"

else if ( "$npes" == "1584" ) then
  set atmos_npes = "432"
  set atmos_nthreads = "1"
  set nxblocks = "1" ; set nyblocks = "1"
  set fv_layout    =   "3,24";  set fv_io_layout    =  "1,4"
  set land_layout  =   "3,24";  set land_io_layout  =  "1,4"
  set ice_layout   =   "144,3"; set ice_io_layout   =  "1,3"
  set ocn_layout   =   "32,36"; set ocn_io_layout   =  "1,4"; set ocn_mask_table = "MOM_mask_table"
  set ocean_npes = "1152"

else if ( "$npes" == "1585" ) then
  set atmos_npes = "216"
  set atmos_nthreads = "2"
  set nxblocks = "4" ; set nyblocks = "4" 
  set fv_layout    =   "3,12";  set fv_io_layout    =  "1,4"
  set land_layout  =   "3,12";  set land_io_layout  =  "1,4"
  set ice_layout   =   "72,3";  set ice_io_layout   =  "1,3"
  set ocn_layout   =   "32,36"; set ocn_io_layout   =  "1,4"; set ocn_mask_table = "MOM_mask_table"
  set ocean_npes = "1152"

else if ("$npes" == "1878" ) then
  set atmos_npes = "864"
  set atmos_nthreads = "2"
  set nxblocks = "2" ; set nyblocks = "2" 
  set fv_layout    =   "6,24";   set fv_io_layout    =  "1,4"
  set land_layout  =   "6,24";   set land_io_layout  =  "1,4"
  set ice_layout   =   "144,6";  set ice_io_layout   =  "1,3"
  set ocn_layout   =   "15,10";  set ocn_io_layout   =  "1,10"; set ocn_mask_table = "MOM_mask_table"
  set ocean_npes = "150"

else if ( "$npes" == "2752" ) then
  set atmos_npes = "432"
  set atmos_nthreads = "1"
  set nxblocks = "1" ; set nyblocks = "1" 
  set fv_layout    =   "3,24";  set fv_io_layout    =  "1,4"
  set land_layout  =   "3,24";  set land_io_layout  =  "1,4"
  set ice_layout   =   "144,3"; set ice_io_layout   =  "1,3"
  set ocn_layout   =   "32,72"; set ocn_io_layout   =  "1,4"; set ocn_mask_table = "MOM_mask_table"
  set ocean_npes = "2304"

else if ( "$npes" == "3168" ) then
  set atmos_npes = "432"
  set atmos_nthreads = "2"
  set nxblocks = "1" ; set nyblocks = "2" 
  set fv_layout    =   "3,24";  set fv_io_layout    =  "1,4"
  set land_layout  =   "3,24";  set land_io_layout  =  "1,4"
  set ice_layout   =   "144,3"; set ice_io_layout   =  "1,3"
  set ocn_layout   =   "32,72"; set ocn_io_layout   =  "1,4"; set ocn_mask_table = "MOM_mask_table"
  set ocean_npes = "2304"

else if ( "$npes" == "3169" ) then
  set atmos_npes = "432"
  set atmos_nthreads = "2"
  set nxblocks = "2" ; set nyblocks = "2" 
  set fv_layout    =   "3,24";  set fv_io_layout    =  "1,4"
  set land_layout  =   "3,24";  set land_io_layout  =  "1,4"
  set ice_layout   =   "144,3"; set ice_io_layout   =  "1,3"
  set ocn_layout   =   "32,72"; set ocn_io_layout   =  "1,4"; set ocn_mask_table = "MOM_mask_table"
  set ocean_npes = "2304"

else if ( "$npes" == "2620" ) then
  set atmos_npes = "432"
  set atmos_nthreads = "2"
  set nxblocks = "1" ; set nyblocks = "2" 
  set fv_layout    =   "3,24";  set fv_io_layout    =  "1,4"
  set land_layout  =   "3,24";  set land_io_layout  =  "1,4"
  set ice_layout   =   "144,3"; set ice_io_layout   =  "1,3"
  set ocn_layout   =   "32,72"; set ocn_io_layout   =  "1,4"; set ocn_mask_table = "mask_table.548.32x72"
  set ocean_npes = "1756"

else if ( "$npes" == "1376" ) then
#uses 1342 pes
  set atmos_npes = "432"
  set atmos_nthreads = "1"
  set nxblocks = "1" ; set nyblocks = "1" 
  set fv_layout    =   "3,24";  set fv_io_layout    =  "1,4"
  set land_layout  =   "3,24";  set land_io_layout  =  "1,4"
  set ice_layout   =   "144,3"; set ice_io_layout   =  "1,3"
  set ocn_layout   =   "32,36"; set ocn_io_layout   =  "1,4"; set ocn_mask_table = "mask_table.242.32x36"
  set ocean_npes = "910"

else if ( "$npes" == "1377" ) then
#uses 1342 pes
  set atmos_npes = "216"
  set atmos_nthreads = "2"
  set nxblocks = "4" ; set nyblocks = "4" 
  set fv_layout    =   "3,12";  set fv_io_layout    =  "1,4"
  set land_layout  =   "3,12";  set land_io_layout  =  "1,4"
  set ice_layout   =   "72,3";  set ice_io_layout   =  "1,3"
  set ocn_layout   =   "32,36"; set ocn_io_layout   =  "1,4"; set ocn_mask_table = "mask_table.242.32x36"
  set ocean_npes = "910"

else if ( "$npes" == "1472" ) then
#uses 1454 pes
  set atmos_npes = "432"
  set atmos_nthreads = "1"
  set nxblocks = "1" ; set nyblocks = "1" 
  set fv_layout    =   "3,24";  set fv_io_layout    =  "1,4"
  set land_layout  =   "3,24";  set land_io_layout  =  "1,4"
  set ice_layout   =   "144,3"; set ice_io_layout   =  "1,3"
  set ocn_layout   =   "36,36"; set ocn_io_layout   =  "1,4"; set ocn_mask_table = "mask_table.274.36x36"
  set ocean_npes = "1022"

else if ( "$npes" == "1473" ) then
#uses 1454 pes
  set atmos_npes = "216"
  set atmos_nthreads = "2"
  set nxblocks = "4" ; set nyblocks = "4" 
  set fv_layout    =   "3,12";  set fv_io_layout    =  "1,4"
  set land_layout  =   "3,12";  set land_io_layout  =  "1,4"
  set ice_layout   =   "72,3";  set ice_io_layout   =  "1,3"
  set ocn_layout   =   "36,36"; set ocn_io_layout   =  "1,4"; set ocn_mask_table = "mask_table.274.36x36"
  set ocean_npes = "1022"

else if ( "$npes" == "1600" ) then
  set atmos_npes = "432"
  set atmos_nthreads = "1"
  set nxblocks = "1" ; set nyblocks = "1"
  set fv_layout    =   "3,24";  set fv_io_layout    =  "1,4"
  set land_layout  =   "3,24";  set land_io_layout  =  "1,4"
  set ice_layout   =   "144,3"; set ice_io_layout   =  "1,3"
  set ocn_layout   =   "32,45"; set ocn_io_layout   =  "1,5"; set ocn_mask_table = "mask_table.315.32x45"
  set ocean_npes = "1125"

else if ( "$npes" == "3456" ) then
  set atmos_npes = "576"
  set atmos_nthreads = "2"
  set nxblocks = "1" ; set nyblocks = "2" 
  set fv_layout    =   "8,12";  set fv_io_layout    =  "1,4"
  set land_layout  =   "8,12";  set land_io_layout  =  "1,4"
  set ice_layout   =   "144,4"; set ice_io_layout   =  "1,4"
  set ocn_layout   =   "32,72"; set ocn_io_layout   =  "1,4"; set ocn_mask_table = "MOM_mask_table"
  set ocean_npes = "2304"

else if ( "$npes" == "3584" ) then
  set atmos_npes = "576"
  set atmos_nthreads = "2"
  set nxblocks = "1" ; set nyblocks = "2"
  set fv_layout    =   "8,12";  set fv_io_layout    =  "1,4"
  set land_layout  =   "8,12";  set land_io_layout  =  "1,4"
  set ice_layout   =   "144,4"; set ice_io_layout   =  "1,4"
  set ocn_layout   =   "45,72"; set ocn_io_layout   =  "1,4"; set ocn_mask_table = "mask_table.808.45x72"
  set ocean_npes   = "2432"

else if ( "$npes" == "5279" ) then
  set atmos_npes = "864"
  set atmos_nthreads = "2"
  set nxblocks = "1" ; set nyblocks = "2" 
  set fv_layout    =   "12,12"; set fv_io_layout    =  "2,4"
  set land_layout  =   "12,12"; set land_io_layout  =  "2,4"
  set ice_layout   =   "72,12"; set ice_io_layout   =  "2,4"
  set ocn_layout   =   "90,54"; set ocn_io_layout   =  "2,6"; set ocn_mask_table = "mask_table.1309.90x54"
  set ocean_npes   = "3551"

else if ( "$npes" == "6975" ) then
  set atmos_npes = "1152"
  set atmos_nthreads = "2"
  set nxblocks = "1" ; set nyblocks = "2" 
  set fv_layout    =   "12,16"; set fv_io_layout    =  "2,4"
  set land_layout  =   "12,16"; set land_io_layout  =  "2,4"
  set ice_layout   =   "144,8"; set ice_io_layout   =  "2,4"
  set ocn_layout   =   "90,72"; set ocn_io_layout   =  "2,4"; set ocn_mask_table = "mask_table.1809.90x72"
  set ocean_npes   = "4671"

else if ( "$npes" == "13792" ) then
  set atmos_npes = "1152"
  set atmos_nthreads = "4"
  set nxblocks = "2" ; set nyblocks = "4" 
  set fv_layout    =   "12,16"; set fv_io_layout    =  "2,4"
  set land_layout  =   "12,16"; set land_io_layout  =  "2,4"
  set ice_layout   =   "144,8"; set ice_io_layout   =  "2,4"
  set ocn_layout   =   "90,144"; set ocn_io_layout   =  "2,4"; set ocn_mask_table = "mask_table.3785.90x144"
  set ocean_npes   = "9175"

else
  if ( $echoOn ) unset echo
  echo "*ERROR*: npes == '$npes' is not supported in this xml."
  if ( $echoOn ) set echo
  exit 1
endif

cat > $work/INPUT/MOM_layout << LAYOUT_EOF
LAYOUT = $ocn_layout
#override IO_LAYOUT = $ocn_io_layout
MASKTABLE = $ocn_mask_table
LAYOUT_EOF

cat > $work/INPUT/SIS_layout << SIS_LAYOUT_EOF
#override undef NIPROC
#override undef NJPROC
#override undef NIPROC_IO
#override undef NJPROC_IO
#override LAYOUT = $ice_layout
#override IO_LAYOUT = $ice_io_layout
SIS_LAYOUT_EOF


      ]]></csh>

    </input>
  </experiment>

<!--================================-->
<!--= TEMPLATES FOR POSTPROCESSING =-->
<!--================================-->

  <experiment name="c96_climo_postprocess">
    <postProcess>
      <component type="atmos" zInterp="era40" start="$(ANA_CLIMO_START)" source="atmos_month" sourceGrid="atmos-cubedsphere" xyInterp="180,288">
        <timeSeries freq="3hr" source="atmos_8xdaily" chunkLength="$(PP_CLIMO_CHUNK)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/atmos8xDailyTS/*)">
            <xi:fallback/>
          </xi:include>
<!-- MDBI, this switch must be on to trigger "fredb" automatically -->
          <analysis switch="$(MDBIswitch)" cumulative="no" script="$FRE_CURATOR_HOME/share/bin/database_ingestor.csh"/>
<!-- /MDBI -->
        </timeSeries>
        <timeSeries freq="6hr" source="atmos_4xdaily" chunkLength="$(PP_CLIMO_CHUNK)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/atmos4xDailyTS/*)">
            <xi:fallback/>
          </xi:include>
        </timeSeries>
        <timeSeries freq="daily" source="atmos_daily" chunkLength="$(PP_CLIMO_CHUNK)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/atmosDailyTS/*)">
            <xi:fallback/>
          </xi:include>
        </timeSeries>
        <timeSeries freq="monthly" chunkLength="$(PP_CLIMO_CHUNK)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/atmosMonthTS/*)">
            <xi:fallback/>
          </xi:include>
        </timeSeries>
        <timeAverage source="monthly" interval="$(PP_CLIMO_CHUNK)">
	  <analysis switch="$(ANALYSIS_SWITCH)" cumulative="no" script="/home/fms/local/opt/fre-analysis/test/eem/code/pcmdi_metrics/frepp.pcmdi_metrics.atmos.csh"/>
	</timeAverage>
        <timeAverage source="monthly" interval="$(PP_CLIMO_CHUNK_B)">
	  <analysis switch="$(ANALYSIS_SWITCH)" cumulative="no" script="/home/fms/local/opt/fre-analysis/test/eem/code/pcmdi_metrics/frepp.pcmdi_metrics.atmos.csh"/>
	</timeAverage>	
        <timeAverage source="monthly" interval="$(ANA_CLIMO_LEN)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/atmosMonthAve/*)">
            <xi:fallback/>
          </xi:include>
        </timeAverage>
        <timeAverage source="annual" interval="$(PP_CLIMO_CHUNK)"   calcInterval="$(PP_CLIMO_CHUNK)"/>
        <timeAverage source="annual" interval="$(PP_CLIMO_CHUNK_B)" calcInterval="$(PP_CLIMO_CHUNK_B)"/>
        <timeAverage source="annual" interval="$(ANA_CLIMO_LEN)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/atmosAnnualAve/*)">
            <xi:fallback/>
          </xi:include>
        </timeAverage>
      </component>

      <component type="atmos_level" start="$(ANA_CLIMO_START)" source="atmos_month" sourceGrid="atmos-cubedsphere" xyInterp="180,288">
        <timeSeries freq="monthly" chunkLength="$(PP_CLIMO_CHUNK)"/>
        <timeSeries freq="annual" chunkLength="$(PP_CLIMO_CHUNK)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/atmosLevelAnnualTS/*)">
            <xi:fallback/>
          </xi:include>
        </timeSeries>
        <timeAverage source="monthly" interval="$(PP_CLIMO_CHUNK)"/>
        <timeAverage source="monthly" interval="$(ANA_CLIMO_LEN)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/atmosLevelMonthAve/*)">
            <xi:fallback/>
          </xi:include>
        </timeAverage>
      </component>

      <component type="atmos_month_aer" start="$(ANA_CLIMO_START)" source="atmos_month_aer" sourceGrid="atmos-cubedsphere" xyInterp="180,288" interpMethod="conserve_order1">
        <timeAverage source="monthly" interval="$(PP_CLIMO_CHUNK)"/>
        <timeAverage source="monthly" interval="$(ANA_CLIMO_LEN)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/atmosMonthAerAve/*)">
            <xi:fallback/>
          </xi:include>
        </timeAverage>
      </component>

      <component type="atmos_diurnal" start="$(ANA_CLIMO_START)" source="atmos_diurnal" sourceGrid="atmos-cubedsphere" xyInterp="180,288">
        <timeSeries freq="monthly" chunkLength="$(PP_CLIMO_CHUNK)"/>
        <timeAverage source="monthly" interval="$(PP_CLIMO_CHUNK)"/>
      </component>

      <component type="atmos_scalar" start="$(ANA_CLIMO_START)" source="atmos_scalar">
        <timeSeries freq="monthly" chunkLength="$(PP_CLIMO_CHUNK)"/>
      </component>

<!-- FULL CHEMISTRY -->
      <component type="tracer_level" start="$(ANA_CLIMO_START)" source="atmos_tracer" sourceGrid="atmos-cubedsphere" xyInterp="180,288" interpMethod="conserve_order1">
        <timeSeries freq="monthly" chunkLength="$(PP_CLIMO_CHUNK)"/>
        <timeSeries freq="annual" chunkLength="$(PP_CLIMO_CHUNK)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/tracerAnnualTS/*)">
            <xi:fallback/>
          </xi:include>
        </timeSeries>
        <timeAverage source="monthly" interval="$(PP_CLIMO_CHUNK)"/>
        <timeAverage source="monthly" interval="$(ANA_CLIMO_LEN)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/tracerMonthAve/*)">
            <xi:fallback/>
          </xi:include>
        </timeAverage>
      </component>

<!-- LAND -->
      <component type="land" start="$(ANA_CLIMO_START)" source="land_month" sourceGrid="land-cubedsphere" xyInterp="180,288" interpMethod="conserve_order1">
        <timeSeries freq="daily" source="land_daily" chunkLength="$(PP_CLIMO_CHUNK)"/>
        <timeSeries freq="monthly" chunkLength="$(PP_CLIMO_CHUNK)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/landMonthTS/*)" >
            <xi:fallback/>
	  </xi:include>
        </timeSeries>
        <timeAverage source="annual" interval="$(PP_CLIMO_CHUNK)"/>
        <timeAverage source="annual" interval="$(PP_CLIMO_CHUNK_B)"/>
        <timeAverage source="monthly" interval="$(PP_CLIMO_CHUNK)"/>
        <timeAverage source="monthly" interval="$(ANA_CLIMO_LEN)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/landMonthAve/*)" >
            <xi:fallback/>
	  </xi:include>
        </timeAverage>
      </component>

      <component type="land_cubic" start="$(ANA_CLIMO_START)" source="land_month" cubicToLatLon="none">
        <timeSeries freq="monthly" chunkLength="$(PP_CLIMO_CHUNK)" >
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/landMonthTSNative/*)" >
            <xi:fallback/>
	  </xi:include>
        </timeSeries>
        <timeSeries freq="daily" source="land_daily" chunkLength="$(PP_CLIMO_CHUNK)">
          <xi:include href="./awg_include/analysis/analysis_climo.xml" xpointer="xpointer(*/landDailyTSNative/*)">
            <xi:fallback/>
	  </xi:include>
        </timeSeries>
      </component>

    </postProcess>
  </experiment>

<!--=======================-->
<!--= CM4 EXPERIMENTS     =-->
<!--=======================-->

 <experiment name="CM4_c96L48_am4a3_2000_sis2" inherit="cm4_sis2_compile">

<!-- MDBI -->
    <description
communityProject="$(ProjectID)" 
communityModel="CM4_c96L48_am4a3_SIS2  $(MOM6_GIT_TAG)" 
communityModelID="CM4_c96L48_am4a3_SIS2"
communityExperimentName="$(name)">
<!-- /MDBI -->

    </description>
<!-- MDBI -->
    <communityComment>
      Experiment name = $(name)
    </communityComment>
    <scenario 
      communityForcing="N/A"
      startTime="$(EXP_CLIMO_START)"
      endTime="$(EXP_CLIMO_END)" 
      parentExperimentID="N/A" 
      parentExperimentRIP="N/A" 
      branch_time="0.0">
    </scenario>
<!-- /MDBI -->

    <input>
      <namelist name="coupler_nml">
        months = $months,
        days   = $days,
        current_date = 1,1,1,0,0,0,
        calendar = 'NOLEAP'
        dt_atmos = 1200,
        dt_cpld  = 3600,
        use_lag_fluxes = .true.
        concurrent = .true.
        do_ocean = .true.
        ocean_npes = $ocean_npes
        atmos_npes = $atmos_npes
        atmos_nthreads = $atmos_nthreads
      </namelist>
      <namelist name="flux_exchange_nml">
            nblocks=$atmos_nthreads
            debug_stocks = .FALSE.
            divert_stocks_report = .TRUE.
            do_area_weighted_flux = .FALSE.
      </namelist>
      <namelist name="fms_io_nml">
            fms_netcdf_restart=.true.
            threading_read='multi'
            max_files_r = 200
            max_files_w = 200
      </namelist>
      <namelist name="fms_nml">
            clock_grain='ROUTINE'
            clock_flags='NONE'
            domains_stack_size = 5000000
            stack_size =0
      </namelist>
      <namelist name="xgrid_nml">
        make_exchange_reproduce = .true.
        interp_method = 'second_order'
      </namelist>

      <namelist name="atmos_model_nml">
         nxblocks = $nxblocks
	 nyblocks = $nyblocks
      </namelist>
      <!--AWG Input datasets -->
      <namelist file="$(AWG_INPUT_HOME)/nml/am4p3_common.nml"/>
      <namelist file="$(AWG_INPUT_HOME)/nml/am4a3_physics.nml"/>
      <namelist file="$(AWG_INPUT_HOME)/nml/am4a3_c96.nml"/>
      <namelist file="$(AWG_INPUT_HOME)/nml/am4p3_2000climo.nml"/>
      <xi:include xpointer="xpointer(//experiment[@name='common_data']/input/node())"/>
      <xi:include xpointer="xpointer(//experiment[@name='c96_data']/input/node())"/>
      <xi:include xpointer="xpointer(//experiment[@name='c96_coupled_domain_decomp']/input/node())"/>
      <xi:include xpointer="xpointer(//experiment[@name='common_csh_blocks']/input/node())"/>

      <!--MOM6 Input datasets-->
      <xi:include xpointer="xpointer(//experiment[@name='OM4_data']/input/node())"/>
      <!--SIS Input datasets-->
      <xi:include xpointer="xpointer(//experiment[@name='SIS2_data']/input/node())"/>
    </input>

    <runtime>
      <production simTime="$(EXP_CLIMO_LEN)" units="years" npes="3584" runTime="12:00:00">
        <segment simTime="12" units="months" runTime="12:00:00"/>
      </production>
      <regression name="basic">
        <run days="10" npes="1584" overrideParams="xgrid_nml:make_exchange_reproduce=.true." runTimePerJob="00:30:00"/><!---->
      </regression>

      <regression name="rts"> <!--fits on t1-->
        <run days="5 5" npes="1584" overrideParams="xgrid_nml:make_exchange_reproduce=.true." runTimePerJob="00:30:00"/><!---->
        <run days="10" npes="3168" overrideParams="xgrid_nml:make_exchange_reproduce=.true." runTimePerJob="00:20:00"/><!---->
     </regression>

      <regression name="restarts">
        <run days="5 5" npes="1584" overrideParams="xgrid_nml:make_exchange_reproduce=.true." runTimePerJob="01:20:00"/><!---->
      </regression>

      <regression name="days">
        <run days="35" npes="3456" runTimePerJob="01:30:00"/><!---->
      </regression>

      <reference restart="$(REFERENCE)/archive/1x0m10d_1584pe/restart/00010111.tar"/>

    </runtime>

    <postProcess>
      <xi:include xpointer="xpointer(//experiment[@name='c96_climo_postprocess']/postProcess/node())"/>
      <xi:include xpointer="xpointer(//experiment[@name='OM4_postprocess']/postProcess/node())"/>
    </postProcess>

  </experiment>

<experiment name="CM4_c96L48_am4c3_2000_sis2" inherit="CM4_c96L48_am4a3_2000_sis2">
  <description communityProject="$(ProjectID)" communityModel="CM4_AM4c3_SIS2  $(MOM6_GIT_TAG)" communityModelID="CM4_AM4c3_SIS2" communityExperimentName="$(name)">
CM4 (c3) 
  </description>
   <input>
      <namelist file="$(AWG_INPUT_HOME)/nml/am4c3_physics.nml"/>
      <namelist file="$(AWG_INPUT_HOME)/nml/am4c3_c96.nml"/>
   </input>
</experiment>

<experiment name="CM4_c96L48_am4c3_2000_sis2_meke" inherit="CM4_c96L48_am4c3_2000_sis2">
  <description communityProject="$(ProjectID)" communityModel="CM4_AM4c3_SIS2  $(MOM6_GIT_TAG)" communityModelID="CM4_AM4c3_SIS2" communityExperimentName="$(name)">
CM4 (c3) with ocean eddy parameterization (MEKE) turned on. Corrected ocean_rough, ocean_albedo and icebergs since CM4_c96L48_am4c3_2000_sis2_meke
  </description>
  <input> 
    <namelist name="icebergs_nml">
        really_debug=.FALSE.
        debug=.FALSE.
        verbose=.FALSE.
        verbose_hrs=7200
        use_operator_splitting=.TRUE.
        bergy_bit_erosion_fraction=0.0
        sicn_shift=0.1
        parallel_reprod=.TRUE.
        traj_sample_hrs=0
        add_weight_to_ocean=.false.
    </namelist>
    <namelist name="ocean_albedo_nml">
            ocean_albedo_option = 5
    </namelist>
    <namelist name="ocean_rough_nml">
            rough_scheme = 'beljaars'
    </namelist>
    <csh type="always"><![CDATA[
#Any inheriting experiment that needs a  type="always" csh block should repeat the contents of csh block of the parent
####COMMON ALWAYS CSH BEGINS######
# MOM6 restart switch
if ( $currentSeg == 1 ) then
   set restart_flag = 'n'
else
   set restart_flag = 'r'
endif

# adjustment of dry mass first time only
set adjust_dry_mass = ".true."
if (-e $work/INPUT/coupler.res) then
   set t1 = (`grep "Model start time"   $work/INPUT/coupler.res | awk '{print $1,$2,$3,$4,$5,$6}'`)
   set t2 = (`grep "Current model time" $work/INPUT/coupler.res | awk '{print $1,$2,$3,$4,$5,$6}'`)
   foreach i (1 2 3 4 5 6)
      if ( $t1[$i] != $t2[$i] ) then
         set adjust_dry_mass = ".false."
         break   
      endif      
   end
endif
####COMMON ALWAYS CSH ENDS######

cat > $work/INPUT/MOM_override << OVERRIDE_EOF
MEKE_KHTH_FAC = 1.0
MEKE_ALPHA_RHINES = 0.05
MEKE_ALPHA_EADY = 0.05
KH_RES_FN_POWER = 100
INTERPOLATE_RES_FN = False
GILL_EQUATORIAL_LD = True
OVERRIDE_EOF

cat > $work/INPUT/SIS_override << OVERRIDE_EOF
#override MAXTRUNC = 1500
OVERRIDE_EOF
    ]]></csh>

  </input> 
</experiment>

<!--================================-->
<!--= OCEAN-ICE DATA (0.25 degree) =-->
<!--================================-->
  <experiment name="OM4_data">
    <input>
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/MOM_input
     </dataFile>      
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/layer_coord.nc
     </dataFile>      
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/seawifs_1998-2006_smoothed_2X.v20140616.nc
     </dataFile>      
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/tidal_amplitude.v20140616.nc
     </dataFile>      
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/MOM_channels_global_025
     </dataFile>      
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/vgrid_75_2m.nc
     </dataFile>      
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/WOA05_pottemp_salt.nc 
     </dataFile>      
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/mask_table.808.45x72
     </dataFile>      
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/mask_table.1053.90x45
     </dataFile>      
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/mask_table.1809.90x72
     </dataFile>
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/mask_table.1309.90x54     
     </dataFile>
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/mask_table.96.32x18     
     </dataFile>
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/mask_table.242.32x36     
     </dataFile>
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/mask_table.274.36x36     
     </dataFile>
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/mask_table.548.32x72     
     </dataFile>
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/mask_table.33.16x18     
     </dataFile>
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
       $(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/mask_table.315.32x45    
     </dataFile>

     <dataFile label="diagTable" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource site="ncrc">$(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/diag_table.MOM6</dataSource>
        <dataSource site="nescc">$(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/diag_table.MOM6</dataSource>
        <dataSource site="gfdl">$(NB_ROOT)/mom6/ice_ocean_SIS/OM4_025/diag_table.MOM6</dataSource>
     </dataFile>

     <namelist name="MOM_input_nml" >
         output_directory = './',
         input_filename = '$restart_flag'
         restart_input_dir = 'INPUT/',
         restart_output_dir = 'RESTART/',
         parameter_filename = 'INPUT/MOM_input','INPUT/MOM_layout','INPUT/MOM_override'
     </namelist>
      <namelist name="ice_albedo_nml">
            t_range = 10.
      </namelist>
      <namelist name="monin_obukhov_nml">
	stable_option = 2,
        rich_crit = 1.0,
        zeta_trans = 0.5
      </namelist>
 
     </input>

  </experiment>

  <experiment name="SIS2_data">
    <input>

     <dataFile label="diagTable" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource site="ncrc">$(MOM6_EXAMPLES)/ice_ocean_SIS2/OM4_025/diag_table.SIS</dataSource>
        <dataSource site="gfdl">$(NB_ROOT)/mom6/ice_ocean_SIS2/OM4_025/diag_table.SIS</dataSource>
     </dataFile>
     <dataFile label="diagTable" target="INPUT/" chksum="" size="" timestamp="">
        <dataSource site="ncrc">$(MOM6_EXAMPLES)/ice_ocean_SIS2/OM4_025/diag_table.icebergs</dataSource>
        <dataSource site="gfdl">$(NB_ROOT)/mom6/ice_ocean_SIS2/OM4_025/diag_table.icebergs</dataSource>
     </dataFile>
     <dataFile label="input" target="INPUT/" chksum="" size="" timestamp="">
         <dataSource platform="$(platform)">$(MOM6_EXAMPLES)/ice_ocean_SIS2/OM4_025/SIS_input</dataSource>
     </dataFile>

<!-- No init ice yet
     <dataFile label="input" target="INPUT/ice_model.res.nc" chksum="" size="" timestamp="">
       <dataSource platform="$(platform)">$(MOM6_EXAMPLES)/ice_ocean_SIS/OM4_025/INPUT/.datasets/OM4_025/INPUT/ice_model.res.v20140620.nc</dataSource>
     </dataFile>
-->
     <namelist name="SIS_input_nml" >
         output_directory = './',
         input_filename = '$restart_flag'
         restart_input_dir = 'INPUT/',
         restart_output_dir = 'RESTART/',
         parameter_filename = 'INPUT/SIS_input','INPUT/SIS_layout','INPUT/SIS_override'
     </namelist>

     </input>
  </experiment>

  <!-- OCEAN  and ICE post-processing-->
  <experiment name="OM4_postprocess">
    <postProcess>
        <csh><![CDATA[
	 #Take care of iceberg restarts and trajectories
         cd $work/RESTART
         ncrcat icebergs.res.nc.* icebergs.res.nc
         if ( -e icebergs.res.nc )  rm -f icebergs.res.nc.*
         cd $work
         ncrcat iceberg_trajectories.nc.* iceberg_trajectories.nc
         if ( -e iceberg_trajectories.nc ) rm -f iceberg_trajectories.nc.* 
         #Save the last line of timestats without the first (step number) column as a signature of MOM6 answers
         tail -1 timestats | cut -c8- > RESTART/$enddate.timestats.res
         #Save the whole timestats under ascii/
         mv timestats $enddate.timestats
         mv timestats.nc $enddate.timestats.nc
         #Make a directory to trick FRE to pick up and archive in ascii
         mkdir extra.results
         mv *velocity_truncations CPU_stats MOM_parameter_doc* extra.results/
         ]]></csh>
      <!--REFINE DIAG SCRIPT -->
      <!--refineDiag_data_stager.csh calculates global averages of basic quantities and stores them in a sqlit database file-->
      <!--By default a refineDiag script causes the annual history files to be unpacked and saved in /ptmp/$USER-->
      <refineDiag script="$(NB_ROOT)/mom6/tools/analysis/MOM6_refineDiag.csh /home/fms/local/opt/fre-analysis/test/eem/code/cm4_web_analysis/refineDiagScript/refineDiag_data_stager_globalAve.csh"/>

      <component type="ocean_monthly"   start="$(ANA_CLIMO_START)" source="ocean_month">
        <timeSeries freq="monthly" chunkLength="$(PP_OCEAN_CHUNK)" source="ocean_month">
          <analysis switch="$(ANALYSIS_SWITCH)" cumulative="no" script="$(NB_ROOT)/mom6/ice_ocean_SIS/OM4_025/ocn_monthly.frepp"/>
        </timeSeries>

        <timeAverage source="monthly" interval="$(PP_OCEAN_CHUNK)" >
	  <analysis switch="$(ANALYSIS_SWITCH)" cumulative="no" script="/home/fms/local/opt/fre-analysis/test/eem/code/pcmdi_metrics/frepp.pcmdi_metrics.ocean.csh"/>
	</timeAverage>
        <timeAverage source="monthly" interval="$(PP_OCEAN_CHUNK_B)" >
	  <analysis switch="$(ANALYSIS_SWITCH)" cumulative="no" script="/home/fms/local/opt/fre-analysis/test/eem/code/pcmdi_metrics/frepp.pcmdi_metrics.ocean.csh"/>
	</timeAverage>
      </component>

      <component type="ocean_annual"    start="$(ANA_CLIMO_START)"  source="ocean_annual">
        <timeAverage source="annual"  interval="$(PP_OCEAN_CHUNK)">
          <analysis switch="$(ANALYSIS_SWITCH)" cumulative="no" script="$(NB_ROOT)/mom6/ice_ocean_SIS/OM4_025/ocn_annual.frepp"/>
        </timeAverage>
        <timeAverage source="annual" interval="$(PP_OCEAN_CHUNK_B)">
          <analysis switch="$(ANALYSIS_SWITCH)" cumulative="no" script="$(NB_ROOT)/mom6/ice_ocean_SIS/OM4_025/ocn_annual.frepp"/>
        </timeAverage>
      </component>

      <component type="ocean_annual_z" start="$(ANA_CLIMO_START)" source="ocean_annual_z">
        <timeAverage source="annual" interval="$(PP_OCEAN_CHUNK)">
          <analysis switch="$(ANALYSIS_SWITCH)" cumulative="no" script="$(NB_ROOT)/mom6/ice_ocean_SIS/OM4_025/ocn_annual_z.frepp"/>
        </timeAverage>
        <timeAverage source="annual" interval="$(PP_OCEAN_CHUNK_B)">
          <analysis switch="$(ANALYSIS_SWITCH)" cumulative="no" script="$(NB_ROOT)/mom6/ice_ocean_SIS/OM4_025/ocn_annual_z.frepp"/>
        </timeAverage>

        <timeSeries freq="annual"   chunkLength="$(PP_OCEAN_CHUNK_B)" source="ocean_annual_z"/>
	
      </component>

      
      <component type="ice"  start="$(ANA_CLIMO_START)"  source="ice_month">
        <timeSeries freq="monthly" chunkLength="$(PP_OCEAN_CHUNK)"  source="ice_month">
	   <analysis switch="$(ANALYSIS_SWITCH)" startYear="$(ANA_CLIMO_START)" script="$(NB_ROOT)/mom6/tools/analysis/Krasting-SeaIce.csh"/>
	</timeSeries>   
        <timeSeries freq="monthly" chunkLength="$(PP_OCEAN_CHUNK_B)"  source="ice_month">
	   <analysis switch="$(ANALYSIS_SWITCH)" startYear="$(ANA_CLIMO_START)" script="$(NB_ROOT)/mom6/tools/analysis/Krasting-SeaIce.csh"/>
	</timeSeries>   
        <timeAverage source="annual"  interval="$(PP_OCEAN_CHUNK)"/>
        <timeAverage source="annual"  interval="$(PP_OCEAN_CHUNK_B)"/>
      </component>     

    </postProcess>
  </experiment> 


 </experimentSuite>


